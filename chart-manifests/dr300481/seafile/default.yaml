---
# Source: seafile/charts/mariadb/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: seafile-mariadb
  namespace: default
  labels:
    app.kubernetes.io/name: mariadb
    helm.sh/chart: mariadb-9.3.16
    app.kubernetes.io/instance: seafile
    app.kubernetes.io/managed-by: Helm
  annotations:
---
# Source: seafile/charts/memcached/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
automountServiceAccountToken: true
metadata:
  name: seafile-memcached
  namespace: default
  labels:
    app.kubernetes.io/name: memcached
    helm.sh/chart: memcached-5.13.1
    app.kubernetes.io/instance: seafile
    app.kubernetes.io/managed-by: Helm
---
# Source: seafile/charts/mariadb/templates/secrets.yaml
apiVersion: v1
kind: Secret
metadata:
  name: seafile-mariadb
  namespace: default
  labels:
    app.kubernetes.io/name: mariadb
    helm.sh/chart: mariadb-9.3.16
    app.kubernetes.io/instance: seafile
    app.kubernetes.io/managed-by: Helm
type: Opaque
data:
  mariadb-root-password: "cXJxY0VtaE5RVg=="
  mariadb-password: "cnhMRmZvTDFZQg=="
---
# Source: seafile/charts/mariadb/templates/primary/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: seafile-mariadb
  namespace: default
  labels:
    app.kubernetes.io/name: mariadb
    helm.sh/chart: mariadb-9.3.16
    app.kubernetes.io/instance: seafile
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: primary
data:
  my.cnf: |-
    [mysqld]
    skip-name-resolve
    explicit_defaults_for_timestamp
    basedir=/opt/bitnami/mariadb
    plugin_dir=/opt/bitnami/mariadb/plugin
    port=3306
    socket=/opt/bitnami/mariadb/tmp/mysql.sock
    tmpdir=/opt/bitnami/mariadb/tmp
    max_allowed_packet=16M
    bind-address=0.0.0.0
    pid-file=/opt/bitnami/mariadb/tmp/mysqld.pid
    log-error=/opt/bitnami/mariadb/logs/mysqld.log
    character-set-server=UTF8
    collation-server=utf8_general_ci
    
    [client]
    port=3306
    socket=/opt/bitnami/mariadb/tmp/mysql.sock
    default-character-set=UTF8
    plugin_dir=/opt/bitnami/mariadb/plugin
    
    [manager]
    port=3306
    socket=/opt/bitnami/mariadb/tmp/mysql.sock
    pid-file=/opt/bitnami/mariadb/tmp/mysqld.pid
---
# Source: seafile/charts/mariadb/templates/primary/svc.yaml
apiVersion: v1
kind: Service
metadata:
  name: seafile-mariadb
  namespace: default
  labels:
    app.kubernetes.io/name: mariadb
    helm.sh/chart: mariadb-9.3.16
    app.kubernetes.io/instance: seafile
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: primary
  annotations:
spec:
  type: ClusterIP
  ports:
    - name: mysql
      port: 3306
      protocol: TCP
      targetPort: mysql
      nodePort: null
  selector: 
    app.kubernetes.io/name: mariadb
    app.kubernetes.io/instance: seafile
    app.kubernetes.io/component: primary
---
# Source: seafile/charts/memcached/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: seafile-memcached
  namespace: default
  labels:
    app.kubernetes.io/name: memcached
    helm.sh/chart: memcached-5.13.1
    app.kubernetes.io/instance: seafile
    app.kubernetes.io/managed-by: Helm
  annotations:
spec:
  type: ClusterIP
  ports:
    - name: memcache
      port: 11211
      targetPort: memcache
      nodePort: null
  selector:
    app.kubernetes.io/name: memcached
    app.kubernetes.io/instance: seafile
---
# Source: seafile/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: seafile
  labels:
    app.kubernetes.io/name: seafile
    helm.sh/chart: seafile-0.5.0
    app.kubernetes.io/instance: seafile
    app.kubernetes.io/version: "8.0.5"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  clusterIP: "None"
  ports:
  - port: 80
    targetPort: http
    protocol: TCP
    name: http
  selector:
    app.kubernetes.io/name: seafile
    app.kubernetes.io/instance: seafile
---
# Source: seafile/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: memcached
spec:
  type: ExternalName
  externalName: "seafile-memcached.default.svc.cluster.local"
---
# Source: seafile/charts/memcached/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: seafile-memcached
  namespace: default
  labels:
    app.kubernetes.io/name: memcached
    helm.sh/chart: memcached-5.13.1
    app.kubernetes.io/instance: seafile
    app.kubernetes.io/managed-by: Helm
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: memcached
      app.kubernetes.io/instance: seafile
  replicas: 1
  template:
    metadata:
      labels:
        app.kubernetes.io/name: memcached
        helm.sh/chart: memcached-5.13.1
        app.kubernetes.io/instance: seafile
        app.kubernetes.io/managed-by: Helm
    spec:
      
      affinity:
        podAffinity:
          
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/name: memcached
                    app.kubernetes.io/instance: seafile
                namespaces:
                  - "default"
                topologyKey: kubernetes.io/hostname
              weight: 1
        nodeAffinity:
          
      securityContext:
        fsGroup: 1001
        runAsUser: 1001
      serviceAccountName: seafile-memcached
      containers:
        - name: memcached
          image: docker.io/bitnami/memcached:1.6.9-debian-10-r189
          imagePullPolicy: "IfNotPresent"
          args:
            - /run.sh
          env:
            - name: BITNAMI_DEBUG
              value: "false"
          ports:
            - name: memcache
              containerPort: 11211
          livenessProbe:
            tcpSocket:
              port: memcache
            initialDelaySeconds: 30
            timeoutSeconds: 5
            failureThreshold: 6
          readinessProbe:
            tcpSocket:
              port: memcache
            initialDelaySeconds: 5
            timeoutSeconds: 3
            periodSeconds: 5
          resources:
            limits: {}
            requests:
              cpu: 250m
              memory: 256Mi
          volumeMounts:
            - name: tmp
              mountPath: /tmp
          securityContext:
            readOnlyRootFilesystem: false
      volumes:
        - name: tmp
          emptyDir: {}
---
# Source: seafile/charts/mariadb/templates/primary/statefulset.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: seafile-mariadb
  namespace: default
  labels:
    app.kubernetes.io/name: mariadb
    helm.sh/chart: mariadb-9.3.16
    app.kubernetes.io/instance: seafile
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: primary
spec:
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels: 
      app.kubernetes.io/name: mariadb
      app.kubernetes.io/instance: seafile
      app.kubernetes.io/component: primary
  serviceName: seafile-mariadb
  updateStrategy:
    type: RollingUpdate
  template:
    metadata:
      annotations:
        checksum/configuration: a0930ea1a374b49cee70e1491c492fa066f0ef840774ed0ac6dbaed835eca0ee
      labels:
        app.kubernetes.io/name: mariadb
        helm.sh/chart: mariadb-9.3.16
        app.kubernetes.io/instance: seafile
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/component: primary
    spec:
      
      serviceAccountName: seafile-mariadb
      affinity:
        podAffinity:
          
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/name: mariadb
                    app.kubernetes.io/instance: seafile
                    app.kubernetes.io/component: primary
                namespaces:
                  - "default"
                topologyKey: kubernetes.io/hostname
              weight: 1
        nodeAffinity:
          
      securityContext:
        fsGroup: 1001
      containers:
        - name: mariadb
          image: docker.io/bitnami/mariadb:10.5.11-debian-10-r0
          imagePullPolicy: "IfNotPresent"
          securityContext:
            runAsUser: 1001
          env:
            - name: BITNAMI_DEBUG
              value: "false"
            - name: MARIADB_ROOT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: seafile-mariadb
                  key: mariadb-root-password
            - name: MARIADB_DATABASE
              value: "my_database"
          ports:
            - name: mysql
              containerPort: 3306
          livenessProbe:
            failureThreshold: 3
            initialDelaySeconds: 120
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
            exec:
              command:
                - /bin/bash
                - -ec
                - |
                  password_aux="${MARIADB_ROOT_PASSWORD:-}"
                  if [[ -f "${MARIADB_ROOT_PASSWORD_FILE:-}" ]]; then
                      password_aux=$(cat "$MARIADB_ROOT_PASSWORD_FILE")
                  fi
                  mysqladmin status -uroot -p"${password_aux}"
          readinessProbe:
            failureThreshold: 3
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
            exec:
              command:
                - /bin/bash
                - -ec
                - |
                  password_aux="${MARIADB_ROOT_PASSWORD:-}"
                  if [[ -f "${MARIADB_ROOT_PASSWORD_FILE:-}" ]]; then
                      password_aux=$(cat "$MARIADB_ROOT_PASSWORD_FILE")
                  fi
                  mysqladmin status -uroot -p"${password_aux}"
          resources: 
            limits: {}
            requests: {}
          volumeMounts:
            - name: data
              mountPath: /bitnami/mariadb
            - name: config
              mountPath: /opt/bitnami/mariadb/conf/my.cnf
              subPath: my.cnf
      volumes:
        - name: config
          configMap:
            name: seafile-mariadb
  volumeClaimTemplates:
    - metadata:
        name: data
        labels: 
          app.kubernetes.io/name: mariadb
          app.kubernetes.io/instance: seafile
          app.kubernetes.io/component: primary
      spec:
        accessModes:
          - "ReadWriteOnce"
        resources:
          requests:
            storage: "8Gi"
---
# Source: seafile/templates/statefulset.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: seafile
  labels:
    app.kubernetes.io/name: seafile
    helm.sh/chart: seafile-0.5.0
    app.kubernetes.io/instance: seafile
    app.kubernetes.io/version: "8.0.5"
    app.kubernetes.io/managed-by: Helm
spec:
  serviceName: seafile
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: seafile
      app.kubernetes.io/instance: seafile
  updateStrategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        app.kubernetes.io/name: seafile
        app.kubernetes.io/instance: seafile
    spec:
      containers:
      - name: seafile
        image: docker.io/300481/seafile:8.0.5-20210627
        imagePullPolicy: Always
        env:
        - name: DB_HOST
          value: "seafile-mariadb.default.svc.cluster.local"
        - name: DB_ROOT_PASSWD
          valueFrom:
            secretKeyRef:
              name: "seafile-mariadb"
              key: mariadb-root-password
        - name: SEAFILE_SERVER_LETSENCRYPT
          value: "false"
        - name: TIME_ZONE
          value: Etc/UTC
        - name: SEAFILE_ADMIN_EMAIL
          value: seafileadmin@example.com
        - name: SEAFILE_ADMIN_PASSWORD
          value: secretpassword
        - name: SEAFILE_SERVER_HOSTNAME
          value: seafile.example.com
        ports:
        - name: http
          containerPort: 80
          protocol: TCP
        volumeMounts:
        - name: seafile-data
          mountPath: /shared
  volumeClaimTemplates:
  - metadata:
      name: seafile-data
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: 10Gi
---
# Source: seafile/templates/ingress.yaml
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: seafile
  annotations:
    # disable max body size check
    # https://github.com/kubernetes/ingress-nginx/blob/master/docs/user-guide/nginx-configuration/annotations.md#custom-max-body-size
    # http://nginx.org/en/docs/http/ngx_http_core_module.html#client_max_body_size
    nginx.ingress.kubernetes.io/proxy-body-size: "0"
    kubernetes.io/ingress.class: nginx
spec:
  rules:
  - host: "seafile.example.com"
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: seafile
            port:
              number: 80
