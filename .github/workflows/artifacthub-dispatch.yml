name: artifact hub dispatch

on: 
  repository_dispatch:
    types: [artifacthub]

jobs:
  update_chart_versions:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: azure/setup-helm@v1
      - uses: FairwindsOps/pluto/github-action@master

      - name: setup git config
        run: |
          git config user.name 'github-actions[bot]'
          git config user.email 'github-actions[bot]@users.noreply.github.com'

      - name: update chart version
        env:
          CONFIGFILE: artifacthub2github/helm-charts.yaml
        run: |
          ./artifacthub2github/update-chart-versions.sh '${{ toJSON(github.event.client_payload) }}'

      - name: generate helm manifests
        env:
          CONFIGFILE: artifacthub2github//helm-charts.yaml
          VALUES_ROOT: artifacthub2github/argocd-example
          MANIFESTS_ROOT: artifacthub2github/argocd-example
        run: |
          ./artifacthub2github/generate-helm-manifests.sh

      - name: generate list of deprecated api versions
        env:
          CONFIGFILE: artifacthub2github/helm-charts.yaml
          CHART_ROOT: artifacthub2github/argocd-example
        run: |
          ./artifacthub2github/generate-list-of-deprecated-api-versions.sh

      - name: generate list of cves
        env:
          CONFIGFILE: artifacthub2github/helm-charts.yaml
          CHART_ROOT: artifacthub2github/argocd-example
        run: |
          ./artifacthub2github/generate-list-of-cves.sh

      - name: commit and push
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          BRANCH: ${{ github.event.client_payload.data.package.repository.name }}/${{ github.event.client_payload.data.package.name }}-${{ github.event.client_payload.data.package.version }}
          CHART_ROOT: artifacthub2github/argocd-example
        run: |
          git checkout -b ${BRANCH}
          git add ${CHART_ROOT} helm-charts.yaml
          git commit -m "update version of ${{ github.event.client_payload.data.package.repository.name }}/${{ github.event.client_payload.data.package.name }} to ${{ github.event.client_payload.data.package.version }}"
          git push origin ${BRANCH}
          gh pr create --base main --fill
