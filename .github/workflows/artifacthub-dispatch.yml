name: artifact hub dispatch

on: 
  repository_dispatch:
    types: [artifacthub]

env:
  PAYLOAD: ${{ toJSON(github.event.client_payload) }}
  PAYLOAD_DIR: artifacthub2github/last-payloads
  CHART_VERSIONS: artifacthub2github/chart-versions.yaml
  VALUES_ROOT: artifacthub2github/argocd-example-chart
  MANIFESTS_ROOT: artifacthub2github/processing-data
  DEPRECATIONS_ROOT: artifacthub2github/processing-data
  CVES_ROOT: artifacthub2github/processing-data
  TRIVY_TEMPLATE: artifacthub2github/processing-data/templates/trivy.tpl

jobs:
  artifacthub-dispatch:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          ref: uat

      - name: setup git config
        run: |
          git config user.name 'github-actions[bot]'
          git config user.email 'github-actions[bot]@users.noreply.github.com'

      - uses: azure/setup-helm@v1
      - uses: FairwindsOps/pluto/github-action@master

      - name: install dependencies
        run: |
          ./artifacthub2github/process-artifacthub-dispatch.sh install_dependencies

      - name: save payload
        run: |
          ./artifacthub2github/process-artifacthub-dispatch.sh save_payload

      - name: update chart version
        run: |
          ./artifacthub2github/process-artifacthub-dispatch.sh update_chart_version

      - name: generate helm manifests
        run: |
          ./artifacthub2github/process-artifacthub-dispatch.sh generate_helm_manifests

      - name: generate list of deprecated api versions
        run: |
          ./artifacthub2github/process-artifacthub-dispatch.sh generate_list_of_deprecated_api_versions

      - name: generate list of cves
        run: |
          ./artifacthub2github/process-artifacthub-dispatch.sh generate_list_of_cves

      - name: commit and push
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          BRANCH: ${{ github.event.client_payload.data.package.repository.name }}/${{ github.event.client_payload.data.package.name }}-${{ github.event.client_payload.data.package.version }}
        run: |
          git checkout -b ${BRANCH}
          git add ${CHART_VERSIONS} ${VALUES_ROOT} ${MANIFESTS_ROOT} ${DEPRECATIONS_ROOT} ${CVES_ROOT} ${PAYLOAD_DIR}
          git commit -m "update version of ${{ github.event.client_payload.data.package.repository.name }}/${{ github.event.client_payload.data.package.name }} to ${{ github.event.client_payload.data.package.version }}"
          git push origin ${BRANCH}
          gh pr create --base uat --fill
